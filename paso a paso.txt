"1,2,1,A-7\n1,2,1,B-2\n1,2,1,C-3\n1,2,1,2,A-1\n1,2,1,2,Z-5\n1,2,1,3-7\n1,2,2,1-0\n1,2,2,2-3\n1,2,5,1-1\n2,1,1,1,W-5\n2,1,1,1,Z-3\n2,1,2,1-4\nA,1,2,1,C-2\nA,1,2,1,D-1\nA,1,2,2,S-1\nA,1,2,2,T-1\nA,4,1,1,G-3\nA,4,1,1,H-3\nA,4,1,2,M-1\nA,4,1,2,N-9\nA,4,3,1-2"

Ingresar la ruta del archivo de entrada.
./ok.txt
"1,2,1,A-7\n1,2,1,B-2\n1,2,1,C-3\n1,2,1,2,A-1\n1,2,1,2,Z-5\n1,2,1,3-7\n1,2,2,1-0\n1,2,2,2-3\n1,2,5,1-1\n2,1,1,1,W-5\n2,1,1,1,Z-3\n2,1,2,1-4\nA,1,2,1,C-2\nA,1,2,1,D-1\nA,1,2,2,S-1\nA,1,2,2,T-1\nA,4,1,1,G-3\nA,4,1,1,H-3\nA,4,1,2,M-1\nA,4,1,2,N-9\nA,4,3,1-2"
*Main> lines "1,2,1,A-7\n1,2,1,B-2\n1,2,1,C-3\n1,2,1,2,A-1\n1,2,1,2,Z-5\n1,2,1,3-7\n1,2,2,1-0\n1,2,2,2-3\n1,2,5,1-1\n2,1,1,1,W-5\n2,1,1,1,Z-3\n2,1,2,1-4\nA,1,2,1,C-2\nA,1,2,1,D-1\nA,1,2,2,S-1\nA,1,2,2,T-1\nA,4,1,1,G-3\nA,4,1,1,H-3\nA,4,1,2,M-1\nA,4,1,2,N-9\nA,4,3,1-2"
["1,2,1,A-7","1,2,1,B-2","1,2,1,C-3","1,2,1,2,A-1","1,2,1,2,Z-5","1,2,1,3-7","1,2,2,1-0","1,2,2,2-3","1,2,5,1-1","2,1,1,1,W-5","2,1,1,1,Z-3","2,1,2,1-4","A,1,2,1,C-2","A,1,2,1,D-1","A,1,2,2,S-1","A,1,2,2,T-1","A,4,1,1,G-3","A,4,1,1,H-3","A,4,1,2,M-1","A,4,1,2,N-9","A,4,3,1-2"]
*Main> map separarEnNodos ["1,2,1,A-7","1,2,1,B-2","1,2,1,C-3","1,2,1,2,A-1","1,2,1,2,Z-5","1,2,1,3-7","1,2,2,1-0","1,2,2,2-3","1,2,5,1-1","2,1,1,1,W-5","2,1,1,1,Z-3","2,1,2,1-4","A,1,2,1,C-2","A,1,2,1,D-1","A,1,2,2,S-1","A,1,2,2,T-1","A,4,1,1,G-3","A,4,1,1,H-3","A,4,1,2,M-1","A,4,1,2,N-9","A,4,3,1-2"]
[["1","2","1","A-7"],["1","2","1","B-2"],["1","2","1","C-3"],["1","2","1","2","A-1"],["1","2","1","2","Z-5"],["1","2","1","3-7"],["1","2","2","1-0"],["1","2","2","2-3"],["1","2","5","1-1"],["2","1","1","1","W-5"],["2","1","1","1","Z-3"],["2","1","2","1-4"],["A","1","2","1","C-2"],["A","1","2","1","D-1"],["A","1","2","2","S-1"],["A","1","2","2","T-1"],["A","4","1","1","G-3"],["A","4","1","1","H-3"],["A","4","1","2","M-1"],["A","4","1","2","N-9"],["A","4","3","1-2"]]

map (\str -> zipWith (||) (map isDashPunctuation str) (map isAlphaNum str)) ["1","2","1","A-7"]
[[True],[True],[True],[True,True,True]]

concat (map (\str -> zipWith (||) (map isDashPunctuation str) (map isAlphaNum str)) ["1","2","1","A-7"])
[True,True,True,True,True,True]

map (\linea -> concat (map (\str -> zipWith (||) (map isDashPunctuation str) (map isAlphaNum str)) linea)) [["1","2","1","A-7"],["1","2","1","B-2"],["1","2","1","C-3"],["1","2","1","2","A-1"],["1","2","1","2","Z-5"],["1","2","1","3-7"],["1","2","2","1-0"],["1","2","2","2-3"],["1","2","5","1-1"],["2","1","1","1","W-5"],["2","1","1","1","Z-3"],["2","1","2","1-4"],["A","1","2","1","C-2"],["A","1","2","1","D-1"],["A","1","2","2","S-1"],["A","1","2","2","T-1"],["A","4","1","1","G-3"],["A","4","1","1","H-3"],["A","4","1","2","M-1"],["A","4","1","2","N-9"],["A","4","3","1-2"]]
[True,True,True,True,True,True]

map (\linea -> concat (map (\str -> zipWith (||) (map isDashPunctuation str) (map isAlphaNum str)) linea)) [["1","2","1","A-7"],["1","2","1","B-2"],["1","2","1","C-3"],["1","2","1","2","A-1"],["1","2","1","2","Z-5"],["1","2","1","3-7"],["1","2","2","1-0"],["1","2","2","2-3"],["1","2","5","1-1"],["2","1","1","1","W-5"],["2","1","1","1","Z-3"],["2","1","2","1-4"],["A","1","2","1","C-2"],["A","1","2","1","D-1"],["A","1","2","2","S-1"],["A","1","2","2","T-1"],["A","4","1","1","G-3"],["A","4","1","1","H-3"],["A","4","1","2","M-1"],["A","4","1","2","N-9"],["A","4","3","1-2"]]
[[True,True,True,True,True,True],[True,True,True,True,True,True],[True,True,True,True,True,True],[True,True,True,True,True,True,True],[True,True,True,True,True,True,True],[True,True,True,True,True,True],[True,True,True,True,True,True],[True,True,True,True,True,True],[True,True,True,True,True,True],[True,True,True,True,True,True,True],[True,True,True,True,True,True,True],[True,True,True,True,True,True],[True,True,True,True,True,True,True],[True,True,True,True,True,True,True],[True,True,True,True,True,True,True],[True,True,True,True,True,True,True],[True,True,True,True,True,True,True],[True,True,True,True,True,True,True],[True,True,True,True,True,True,True],[True,True,True,True,True,True,True],[True,True,True,True,True,True]]

concat (map (\linea -> concat (map (\str -> zipWith (||) (map isDashPunctuation str) (map isAlphaNum str)) linea)) [["1","2","1","A-7"],["1","2","1","B-2"],["1","2","1","C-3"],["1","2","1","2","A-1"],["1","2","1","2","Z-5"],["1","2","1","3-7"],["1","2","2","1-0"],["1","2","2","2-3"],["1","2","5","1-1"],["2","1","1","1","W-5"],["2","1","1","1","Z-3"],["2","1","2","1-4"],["A","1","2","1","C-2"],["A","1","2","1","D-1"],["A","1","2","2","S-1"],["A","1","2","2","T-1"],["A","4","1","1","G-3"],["A","4","1","1","H-3"],["A","4","1","2","M-1"],["A","4","1","2","N-9"],["A","4","3","1-2"]])

concat (map (\linea -> concat (map (\str -> zipWith (||) (map isDashPunctuation str) (map isAlphaNum str)) linea)) [["1","2","1","A-7"],["1","2","1","B-2"],["1","2","1","C-3"],["1","2","1","2","A-1"],["1","2","1","2","Z-5"],["1","2","1","3-7"],["1","2","2","1-0"],["1","2","2","2-3"],["1","2","5","1-1"],["2","1","1","1","W-5"],["2","1","1","1","Z-3"],["2","1","2","1-4"],["A","1","2","1","C-2"],["A","1","2","1","D-1"],["A","1","2","2","S-1"],["A","1","2","2","T-1"],["A","4","1","1","G-3"],["A","4","1","1","H-3"],["A","4","1","2","M-1"],["A","4","1","2","N-9"],["A","4","3","1-2"]])
[True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True,True]

(all (==True) (concat (map (\linea -> concat (map (\str -> zipWith (||) (map isDashPunctuation str) (map isAlphaNum str)) linea)) [["1","2","1","A-7"],["1","2","1","B-2"],["1","2","1","C-3"],["1","2","1","2","A-1"],["1","2","1","2","Z-5"],["1","2","1","3-7"],["1","2","2","1-0"],["1","2","2","2-3"],["1","2","5","1-1"],["2","1","1","1","W-5"],["2","1","1","1","Z-3"],["2","1","2","1-4"],["A","1","2","1","C-2"],["A","1","2","1","D-1"],["A","1","2","2","S-1"],["A","1","2","2","T-1"],["A","4","1","1","G-3"],["A","4","1","1","H-3"],["A","4","1","2","M-1"],["A","4","1","2","N-9"],["A","4","3","1-2"]]))) 

all (==True) (concat (map (\linea -> concat (map (\str -> zipWith (||) (map isDashPunctuation str) (map isAlphaNum str)) linea)) archivo))
True


*Main> map head [["1","2","1","A-7"],["1","2","1","B-2"],["1","2","1","C-3"],["1","2","1","2","A-1"],["1","2","1","2","Z-5"],["1","2","1","3-7"],["1","2","2","1-0"],["1","2","2","2-3"],["1","2","5","1-1"],["2","1","1","1","W-5"],["2","1","1","1","Z-3"],["2","1","2","1-4"],["A","1","2","1","C-2"],["A","1","2","1","D-1"],["A","1","2","2","S-1"],["A","1","2","2","T-1"],["A","4","1","1","G-3"],["A","4","1","1","H-3"],["A","4","1","2","M-1"],["A","4","1","2","N-9"],["A","4","3","1-2"]]
["1","1","1","1","1","1","1","1","1","2","2","2","A","A","A","A","A","A","A","A","A"]

nub (map head [["1","2","1","A-7"],["1","2","1","B-2"],["1","2","1","C-3"],["1","2","1","2","A-1"],["1","2","1","2","Z-5"],["1","2","1","3-7"],["1","2","2","1-0"],["1","2","2","2-3"],["1","2","5","1-1"],["2","1","1","1","W-5"],["2","1","1","1","Z-3"],["2","1","2","1-4"],["A","1","2","1","C-2"],["A","1","2","1","D-1"],["A","1","2","2","S-1"],["A","1","2","2","T-1"],["A","4","1","1","G-3"],["A","4","1","1","H-3"],["A","4","1","2","M-1"],["A","4","1","2","N-9"],["A","4","3","1-2"]])
["1","2","A"]

transformar [["1","2","1","A-7"],["1","2","1","B-2"],["1","2","1","C-3"],["1","2","1","2","A-1"],["1","2","1","2","Z-5"],["1","2","1","3-7"],["1","2","2","1-0"],["1","2","2","2-3"],["1","2","5","1-1"],["2","1","1","1","W-5"],["2","1","1","1","Z-3"],["2","1","2","1-4"],["A","1","2","1","C-2"],["A","1","2","1","D-1"],["A","1","2","2","S-1"],["A","1","2","2","T-1"],["A","4","1","1","G-3"],["A","4","1","1","H-3"],["A","4","1","2","M-1"],["A","4","1","2","N-9"],["A","4","3","1-2"]]
Nodo "$" [Nodo "A" [] 0,Nodo "2" [] 0,Nodo "1" [] 0] 0

encontrarHijos (Nodo "1" [] 0) [["1","2","1","A-7"],["1","2","1","B-2"],["1","2","1","C-3"],["1","2","1","2","A-1"],["1","2","1","2","Z-5"],["1","2","1","3-7"],["1","2","2","1-0"],["1","2","2","2-3"],["1","2","5","1-1"],["2","1","1","1","W-5"],["2","1","1","1","Z-3"],["2","1","2","1-4"],["A","1","2","1","C-2"],["A","1","2","1","D-1"],["A","1","2","2","S-1"],["A","1","2","2","T-1"],["A","4","1","1","G-3"],["A","4","1","1","H-3"],["A","4","1","2","M-1"],["A","4","1","2","N-9"],["A","4","3","1-2"]]
                               [    ["2","1","A-7"],    ["2","1","B-2"],    ["2","1","C-3"],    ["2","1","2","A-1"],    ["2","1","2","Z-5"],    ["2","1","3-7"],    ["2","2","1-0"],    ["2","2","2-3"],    ["2","5","1-1"]]

transformarHijos (Nodo "1" [] 0) (encontrarHijos (Nodo "1" [] 0) [["1","2","1","A-7"],["1","2","1","B-2"],["1","2","1","C-3"],["1","2","1","2","A-1"],["1","2","1","2","Z-5"],["1","2","1","3-7"],["1","2","2","1-0"],["1","2","2","2-3"],["1","2","5","1-1"],["2","1","1","1","W-5"],["2","1","1","1","Z-3"],["2","1","2","1-4"],["A","1","2","1","C-2"],["A","1","2","1","D-1"],["A","1","2","2","S-1"],["A","1","2","2","T-1"],["A","4","1","1","G-3"],["A","4","1","1","H-3"],["A","4","1","2","M-1"],["A","4","1","2","N-9"],["A","4","3","1-2"]])

takeWhile (/= '-') (concat ["1","2","1","A-7"])
"121A"

map (\x y-> x<y) (map (\fila ->  takeWhile (/= '-') (concat fila)) [filas])


isSorted :: (Ord a) => [a] -> Bool
isSorted []       = True
isSorted [x]      = True
isSorted (x:y:xs) = x < y && isSorted (y:xs)

map func [[]] = "121A","121B"....

archivo = isSorted $ 
                    map (\str -> takeWhile (/= '-') (concat str)) archivo
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ esto devuelve el  ["121A","121B","121C","1212A","1212Z","1213","1221","1222","1251","2111W","2111Z","2121","A121C","A121D","A122S","A122T","A411G","A411H","A412M","A412N","A431"]

                   $ Agarrar [filasConcatenadas] y transformar en [ValorDeLaFila]
                    map (\x -> (map ord x)) [filasConcatenadas] => [[ValorDeCadaNodo]]
                    map (sum) [[ValorDeCadaNodo]] => [ValorDeLaFila]

"121A","121B","121C","1212A","1212Z","1213","1221","1222","1251","2111W","2111Z","2121","A121C","A121D","A122S","A122T","A411G","A411H","A412M","A412N","A431"]
[213,   214,    215,    263,    288,    199,   198,   199,   201,    284,    287,   198,    280,    281,    297,    298,    286,    287,    293,    294,   217]

sacar las cabezas de cada palabra -> eliminar duplicados -> en orden?
map head [filasConcatenadas] . nub . isSorted && loMismo map tail [filasConcatenadas]